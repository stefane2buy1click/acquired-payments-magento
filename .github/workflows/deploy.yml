name: Deploy Plugin

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: environment

concurrency:
  group: deployment-${{ inputs.environment }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          cat > ~/.ssh/magento_rsa <<EOF
          ${{ secrets.SSH_KEY }}
          EOF
          chmod 600 ~/.ssh/magento_rsa

          cat >>~/.ssh/config <<EOF
          Host magento
            HostName ${{ vars.SSH_HOST }}
            User ${{ vars.SSH_USER }}
            IdentityFile ~/.ssh/magento_rsa
          EOF
          chmod 600 ~/.ssh/config

          ssh-keyscan -t rsa ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Create Deploy Destination
        id: create_deploy_dest
        run: |
          temp_deploy_dest="tmp/deploy-${{ github.run_id }}-${{ github.run_attempt }}"
          echo "TEMP_DEPLOY_DEST=$temp_deploy_dest" >> $GITHUB_ENV

      - name: Copy Files
        run: scp -r ./* magento:~/${{ env.TEMP_DEPLOY_DEST }}

      - name: Enable Maintenance Mode
        run: ssh magento 'cd public_html && bin/magento maintenance:enable'

      - name: Deploy Plugin
        run: |
          ssh -T magento <<EOF
          cd public_html
          mkdir -p app/code/Acquired/Payments
          rm -rf app/code/Acquired/Payments/*
          rm -rf ~/${{ env.TEMP_DEPLOY_DEST }}/.github
          cp -rf ~/${{ env.TEMP_DEPLOY_DEST }}/* app/code/Acquired/Payments/
          rm -rf ~/${{ env.TEMP_DEPLOY_DEST }}
          EOF

      - name: Upgrade Magento
        run: ssh magento 'cd public_html && bin/magento setup:upgrade'

      - name: Compile Magento
        run: ssh magento 'cd public_html && bin/magento setup:di:compile'

      - name: Clean Magento Cache
        run: ssh magento 'cd public_html && bin/magento cache:clean'

      - name: Disable Maintenance Mode
        run: ssh magento 'cd public_html && bin/magento maintenance:disable'

